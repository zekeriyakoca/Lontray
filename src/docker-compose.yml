version: '3.4'

services:
  web.bff:
    container_name: webBFF
    image: ${DOCKER_REGISTRY-}webbff:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: ApiGateways/Web.BFF.Shopping/Dockerfile
    ports:
      - 6001:443 
      - 6000:80
    networks:
      - lontray-net
    depends_on:
      - basketApi
      - catalogApi
      - orderingApi
      - identityApi
  basket.api:
    container_name: basketApi
    image: ${DOCKER_REGISTRY-}basketapi:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile
    ports:
      - 8001:443 
      - 8000:80
      - 8020:81
    networks:
      - lontray-net
    depends_on:
      - rabbitmq
      - redis
  catalog.api:
    container_name: catalogApi
    image: ${DOCKER_REGISTRY-}catalogapi:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    ports:
      - 7001:443 
      - 7000:80
      - 7020:81
    networks:
      - lontray-net
    depends_on:
      - rabbitmq
  ordering.api:
    container_name: orderingApi
    image: ${DOCKER_REGISTRY-}orderingapi:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.API/Dockerfile
    ports:
      - 9001:443 
      - 9000:80
      - 9020:81
    networks:
      - lontray-net
    depends_on:
      - rabbitmq
  identity.api:
    container_name: identityApi
    image: ${DOCKER_REGISTRY-}identityapi:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Identity/Identity.API/Dockerfile
    ports:
      - 5001:443 
      - 5000:80
    networks:
      - lontray-net

  ### External Services
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - 15672:15672
      - 5672:5672
    networks: 
      - lontray-net
  redis:
    container_name: redis
    image: redis
    command: --save 60 1
    ports:
      - 6379:6379
    networks: 
      - lontray-net
    volumes:
      - redis-data:/TempForDocker/Lontray/RedisDB
  #redis-cli:
  #  container_name: redis-cli
  #  image: redis-cli
  #  ports:
  #    - 6379:6379
  #  networks:
  #    - lontray-net

  #elasticsearch:  
  #  container_name: elasticsearch 
  #  image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
  #  ports:
  #    - 9200:9200 
  #    - 9300:9300
  #  environment:
  #    - discovery.type=single-node
  #  networks:
  #    - lontray-net
  #kibana:  
  #  container_name: kibana  
  #  image: docker.elastic.co/kibana/kibana:7.16.2
  #  ports:  
  #    - 5601:5601  
  #  depends_on:  
  #    - elasticsearch  
  #  environment:
  #    #- ELASTICSEARCH_HOSTS=["http://elasticsearch:9200"]
  #    - ELASTICSEARCH_URL=http://localhost:9200 
  #  networks:
  #    - lontray-net
  seq:
    container_name: seq
    image: datalust/seq:latest
    ports:
      - 5341:80
    environment:
      - ACCEPT_EULA=Y
    networks:
      - lontray-net
networks:
  lontray-net:
    driver: bridge
volumes:
  redis-data:

